
1. git init -> To Intianlize the functionality of git in a folder we have to use command , This intializzes a .git folder as a hidden folder in this repository
and this .git folder manages the functionality of git 

2.The Working of Git is divided into 3 Areas 
  
  1. `Working Area` -> This is the Area that holds Untraked Files and Folders and File that is in the Working Area is Not Tracked by git and 
  therefore Change Made in that are Not reflected in it 


  2.'Staging Area' -> This is the Area in which it is decided that which Change will go in the next commit and which will Not 
  so for example that there is a file you have and you staged that file with some changes now git will follow these changes and if the file is modified again while 
  it is in the staging Staging Area we will have to stage that file again as that changes are Not staged for the next commit  
     
     1. git add <fileName> -> to move a file from working area to Staging area
     
     2. git rm --cached <fileName> -> removes git from tracking the file 
 

3.`Repository Area` -> This area keeps the version history of a particular file that and we can roll back to previous versions to see which change was made in each 
 version 

4. `Git Log `-> list down all the commits 
    To get the git logs in lost order we can use command like 
    git log --all --oneline


5. Once a file is commited all the changes int that file are managed by the git only and Not like the first time and this time it will also show changes made in a file 
in Working too  

6. git restore <FileName> -> Consinder you did some changes and those changes are in the staging area you dont want to commit those changes for that we can use 
git restore Commands this commad restore us to the last commit version  

7. if we have a file which have be commited once we do some changes in it and now we want to remove the change if the file is not in staging area then we can directly do 
    git restore command
   But if the file has been staged then the changes done are now in the staging area and we would have to unstage the changes first for that the command is 
   git restore --staged <fileName>  
   after this we can do git restore to restore to the previous commit 

8. Difference between git rm and git restore 
   1.git rm is for files that have no single commit and it also removes the git functionality from a file 
     its like if we want to remove changes from being tracked we use git rm
  
   2.git restore is for reverting back to the previous commit and it also does not remove the git from tracking changes 
     in that file it just revert back to previous commit and get the file in the working area 

9. git diff <Hash1> <Hash2> ->  this command is used if we want to know diffenece between two commits; 

10. git remote -> To See How many and what connections we have to remote repositories

11. git remote add <connection-name(Mostly prefferd orgin for first one)> <repo-link> -> To add a new remote repo Connection

12. git push <connection-name> <branch-name> -> To push the local repository to a remote repository 

13. git remote <old-name> <new-name> -> To rename a repo Connection
14. git pull <connection-name> <branch-name> ->To pull the changes made to the remote repo to the local repo.
